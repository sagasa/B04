/******************************************************************************
* File Name : GSreflection_probe.h               Ver : 1.00  Date : 2020-08-13
*
* Description :
*
*       リフレクションプローブ．
*
* Author : Moriharu Ohzu.
*
******************************************************************************/
#ifndef GS_REFLECTION_PROBE_H_
#define GS_REFLECTION_PROBE_H_

#include <gslib.h>

#ifdef __cplusplus
extern "C" {
#endif

/*=============================================================================
*
* Purpose : リフレクションプローブの読み込み．
*
* Return  :  読み込みが成功すれば真、失敗すれば偽を返す．
*
*============================================================================*/
extern GSboolean
gsLoadReflectionProbe
(
    GSuint      id,			/* リフレクションプローブID            */
    const char* pszFileName	/* リフレクションプローブファイル名    */
);

/*=============================================================================
*
* Purpose : リフレクションプローブの削除．
*
* Return  :  なし．
*
*============================================================================*/
extern void
gsDeleteReflectionProbe
(
    GSuint      id			/* リフレクションプローブID         */
);

/*=============================================================================
*
* Purpose : 全リフレクションプローブを削除．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsCleanUpReflectionProbe
(
    void
);

/*=============================================================================
*
* Purpose : リフレクションプローブのバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsBindReflectionProbe
(
    GSuint      id			/* リフレクションプローブID         */
);

/*=============================================================================
*
* Purpose : リフレクションプローブのアンバインド
*
* Return  : なし．
*
*============================================================================*/
extern void
gsUnBindReflectionProb
(
    void
);

/*=============================================================================
*
* Purpose : リフレクションプローブ用のテクスチャをバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsBindReflectionProbeTexture
(
    const GSvector3*    pPosition       /* バウンディングボックスの座標      */
);


/*=============================================================================
*
* Purpose : リフレクションプローブ用のテクスチャをバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsBindReflectionProbeTextureEx
(
    const GSvector3* pPosition,     /* バウンディングボックスの座標    */
    const GSvector3* pSize          /* バウンディングボックスのサイズ  */
);

/*=============================================================================
*
* Purpose : 環境マップ用のテクスチャをバインド．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsBindEnvironmentReflectionTexture
(
    void
);

/*=============================================================================
*
* Purpose : リフレクションプローブ用のバウンディングボックスのサイズを設定．
*
* Return  : なし．
*
*============================================================================*/
extern void
gsSetReflectionProbeBoundigBoxSize
(
    const GSvector3*    pSize           /* バウンディングボックスのサイズ  */
);

#ifdef __cplusplus
}
#endif

#endif

/********** End of File ******************************************************/
